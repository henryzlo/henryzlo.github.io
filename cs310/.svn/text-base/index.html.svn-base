<h1>Advanced Data Structures and Algorithms (CS310)</h1>

<h2>What's the Course About?</h2>
<p>
After this course, you should be able to pass a programming interview.
You will learn how to determine the efficiency of algorithms, how to write efficient algorithms, and many fundamental programming techniques.  We will be using Java extensively, but techniques apply to any programming language.
</p>
List of topics:
<ul>
  <li>Data structures:
    <ul>
      <li>Maps</li>
      <li>Sets</li>
      <li>Hashing</li>
      <li>Graphs</li>
      <li>Priority Queues</li>
    </ul>
  </li>
  <li>Algorithm design techniques:
    <ul>
      <li>Divide and conquer</li>
      <li>Dynamic programming</li>
      <li>Greedy algorithms</li>
      <li>Compression</li>
      <li>Graph algorithms</li>
    </ul>
  </li>
  <li>We will use extensively:
    <ul>
      <li>Java Collections</li>
      <li>Big O analysis</li>
    </ul>
  </li>
</ul>
</p>

<h2>Official Course Description:</h2>
<p>
A systematic study of the methods of structuring and manipulating data in computing. Application programming interfaces (APIs), data abstraction, and the encapsulation of implementations.  The Java Collection Classes. The design and analysis of algorithms. Advanced techniques for program development and organization.
</p>

<h2>General Information</h2>
<table>  
  <tr>
    <td>Instructor:</td>
    <td>Henry Lo</td>
  </tr>
  <tr>
    <td>Office:</td>
    <td>S-3-158A</td>
  </tr>
  <tr>
    <td>Office Hours:</td>
    <td>Monday, 5:00pm-6:00pm, or by appointment</td>
  </tr>
  <tr> 
    <td>Email:</td>
    <td>henryzlo@cs.umb.edu</td>
  </tr>
  <tr>
    <td>Website:</td>
    <td>http://www.cs.umb.edu/~henryzlo/cs310</td>
  </tr>
  <tr>
    <td>Class Time:</td>
    <td>Monday, Tuesday, Thursday, 6:00pm-7:30pm</td>
  </tr>
  <tr>
    <td>Class Location:</td>
    <td>McCormack M01-0421</td>
  </tr>
  <tr>
    <td>Suggested Text:</td>
    <td>Mark Allen Weiss, Data Structures and Problem Solving in Java.</td>
  </tr>
</table>

<h2>Course Schedule</h2>
(Tentative)
<table>  
  <tr>
    <th>Week</th>
    <th>Dates</th>
    <th>Topics</th>
    <th>Class Notes</th>
    <th>Other</th>
  </tr>
  <tr>
    <td>0</td>
    <td>5/27, 5/29</td>
    <td>Review of Big O, programming concepts, hashing</td>
    <td><a href="notes/big-o.pdf">Big O</a><br/>
      <a href="notes/hashing.pdf">Hashing</a></td>
    <td><a href="hw/qual.pdf">Qualifying assignment</a> due Thursday<br/>
        <a href="hw/SinglyLinkedList.java">SinglyLinkedList.java</a><br/>
	<a href="hw/hw1.txt">Homework 1</a> due next Tuesday<br/>
    </td>
  </tr>
  <tr>
    <td>1</td>
    <td>6/1, 6/3, 6/5</td>
    <td>Sets, maps, bit sets, b-trees</td>
    <td><a href="notes/sets-maps.pdf">Sets and Maps</a><br/>
      <a href="notes/bitsets.pdf">Bit Sets</a><br/>
      <a href="notes/b-trees.pdf">B-trees</a></td>
    <td>
	<a href="pa1/pa1.pdf">Programming Assignment 1</a> due next Tuesday<br/>
	<a href="pa1/data.csv">Example output</a> for PA1<br/>
	<a href="pa1/Main.java">Main.java</a><br/>
	<a href="pa1/AbstractHashSet.java">AbstractHashSet.java<br/>
    </td>
  </tr>
  <tr>
    <td>2</td>
    <td>6/9, 6/10, 6/12</td>
    <td>Simulations, greedy algorithms, dynamic programming</td>
    <td><a href="notes/simulation.pdf">Event-Driven Simulations</a><br/>
      <a href="notes/greedy.pdf">Greedy Algorithms</a><br/>
      <a href="notes/dynamic.pdf">Dynamic Programming</a></td>
    <td>
	<a href="pa2/pa2.pdf">Programming Assignment 2</a> due next Tuesday<br/>
	<a href="pa2/Simulation.java">Simulation.java</a><br/>
	<a href="pa2/Ball.java">Ball.java<br/>
	<a href="pa2/Paddle.java">Paddle.java<br/>
	<a href="pa2/StdDraw.java">StdDraw.java<br/>
    </td>
  </tr>
  <tr>
    <td>3</td>
    <td>6/16, 6/17, 6/19</td>
    <td>Divide and conquer, algorithms review</td>
    <td><a href="notes/divide-conquer.pdf">Divide and Conquer</a><br/>
      <a href="problems1/problems.pdf">Review Problems</a></td>
    <td><a href="hw2/hw2.pdf">Homework 2</a> due next Tuesday<br/>
      <a href="problems1/ProblemSolutionsTest.java">ProblemSolutionsTest.java</a><br/>
      <a href="problems1/ProblemSolutions.java">ProblemSolutions.java</a><br/>
      <a href="problems1/F.java">F.java</a>
      <br/>
  </tr>
  <tr>
    <td>4</td>
    <td>6/23, 6/24, 6/26</td>
    <td>Games, Exam 1 on Thursday</td>
    <td><a href="notes/games.pdf">Playing Games</a></td>
    <td>Programmed exam questions due next Thursday (<a href="exam1/ExamSolutions.java">solutions</a>)<br/>
      <a href="exam1/ExamSolutionsTest.java">Test cases</a>.  Write your code in ExamSolutions.java</td>
  </tr>
  <tr>
    <td>5</td>
    <td>6/30, 7/1, 7/3</td>
    <td>Games, graph algorithms</td>
    <td><a href="notes/game-package.pdf">Game Package</a></td>
    <td><a href="pa3/pa3.pdf">Programming assignment 3</a> due next Tuesday (<a href="pa3/solution.zip">solutions</a>)<br/>
      <a href="games.zip">Game package</a>
    </td>
  </tr>
  <tr>
    <td>6</td>
    <td>7/7, 7/8, 7/10</td>
    <td>Graphs</td>
    <td><a href="notes/graph.pdf">Graphs</a><br/>
      <a href="notes/traversal.pdf">Graph Traversal</a>
    </td>
    <td><a href="pa4/pa4.pdf">Programming assignment 4</a> due next Tuesday (<a href="pa4/solutions.zip">solutions</a>)<br/>
      <a href="pa4/Maze.java">Maze.java</a><br/>
      <a href="pa4/Traveller.java">Traveller.java</a><br/>
    </td>
  </tr>
  <tr>
    <td>7</td>
    <td>7/14, 7/15, 7/17</td>
    <td>Graph algorithms</td>
    <td><a href="notes/graph_algorithms.pdf">More Graph Algorithms</a><br/>
      <a href="notes/complexity.pdf">Complexity</a>
    </td>
    <td><a href="hw3/hw3.pdf">Homework 3</a> due next Monday</td>
  </tr>
  <tr>
    <td>8</td>
    <td>7/21, 7/22, 7/24</td>
    <td>Exam 2 on 7/22, Exam 3 (optional for extra credit) on 7/24.</td>
  </tr>
</table>

<h2>Grading</h2>

<ul>
  <li>20% - Homeworks</li>
  <li>20% - Programming assignments</li>
  <li>30% - Midterm</li>
  <li>30% - Final (must pass)</li>
</ul>

<h2>Course Policies</h2>
<ul>
  <li>You can work together, but you <bold>must acknowledge other's contributions</bold>.</li>
  <li>You must also come up with your own answers.</li>
  <li>Any cheating or copying gets you an <bold>F</bold>.</li>
  <li>If you drop the course before you complete half the coursework, you will not get an incomplete.</li>
</ul>

<h2>Accomodations</h2>

Section 504 of the Americans with Disabilities Act of 1990 offers guidelines for curriculum modifications and adaptations for students with documented disabilities. If applicable, students may obtain adaptation recommendations from the Ross Center for Disability Services in the Campus Center (617-287-7430). The student must present these recommendations and discuss them with each professor within a reasonable period, preferably by the end of Drop/Add period.

<h2>Student Conduct</h2>

Students are required to adhere to the University Policy on Academic Standards and Cheating, to the University Statement on Plagiarism and the Documentation of Written Work, and to the Code of Student Conduct as delineated in the catalog of Undergraduate Programs. The Code is also available online at: Code of Student Conduct
